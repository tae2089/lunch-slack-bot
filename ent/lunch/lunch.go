// Code generated by ent, DO NOT EDIT.

package lunch

import (
	"time"
)

const (
	// Label holds the string label denoting the lunch type in the database.
	Label = "lunch"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldPayer holds the string denoting the payer field in the database.
	FieldPayer = "payer"
	// FieldRestaurantName holds the string denoting the restaurantname field in the database.
	FieldRestaurantName = "restaurant_name"
	// FieldCafeName holds the string denoting the cafename field in the database.
	FieldCafeName = "cafe_name"
	// FieldPaymentTime holds the string denoting the paymenttime field in the database.
	FieldPaymentTime = "payment_time"
	// EdgeParticipant holds the string denoting the participant edge name in mutations.
	EdgeParticipant = "participant"
	// Table holds the table name of the lunch in the database.
	Table = "lunches"
	// ParticipantTable is the table that holds the participant relation/edge.
	ParticipantTable = "lunch_participants"
	// ParticipantInverseTable is the table name for the LunchParticipant entity.
	// It exists in this package in order to avoid circular dependency with the "lunchparticipant" package.
	ParticipantInverseTable = "lunch_participants"
	// ParticipantColumn is the table column denoting the participant relation/edge.
	ParticipantColumn = "payment_id"
)

// Columns holds all SQL columns for lunch fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldPayer,
	FieldRestaurantName,
	FieldCafeName,
	FieldPaymentTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
