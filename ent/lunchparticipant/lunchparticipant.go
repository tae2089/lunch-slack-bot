// Code generated by ent, DO NOT EDIT.

package lunchparticipant

import (
	"time"
)

const (
	// Label holds the string label denoting the lunchparticipant type in the database.
	Label = "lunch_participant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldPaymentID holds the string denoting the payment_id field in the database.
	FieldPaymentID = "payment_id"
	// EdgePayment holds the string denoting the payment edge name in mutations.
	EdgePayment = "payment"
	// Table holds the table name of the lunchparticipant in the database.
	Table = "lunch_participants"
	// PaymentTable is the table that holds the payment relation/edge.
	PaymentTable = "lunch_participants"
	// PaymentInverseTable is the table name for the Lunch entity.
	// It exists in this package in order to avoid circular dependency with the "lunch" package.
	PaymentInverseTable = "lunches"
	// PaymentColumn is the table column denoting the payment relation/edge.
	PaymentColumn = "payment_id"
)

// Columns holds all SQL columns for lunchparticipant fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldPaymentID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
